{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/service/data/todo-data.service.ts","webpack:///./src/app/service/data/welcome-data.service.ts","webpack:///./src/app/service/hardcoded-authentication.service.ts","webpack:///./src/app/service/route-guard.service.ts","webpack:///./src/app/todo/todo.component.css","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/app/update-todo/update-todo.component.css","webpack:///./src/app/update-todo/update-todo.component.html","webpack:///./src/app/update-todo/update-todo.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;ACZoD;AACG;AACE;AACM;AACT;AACG;AAEG;AACM;AACQ;AAG1E,IAAM,MAAM,GAAW;IAErB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAC,qEAAc;KACzB;IACD;QACE,IAAI,EAAC,OAAO;QACZ,SAAS,EAAC,qEAAc;KACzB;IACD;QACE,IAAI,EAAC,eAAe;QACpB,SAAS,EAAC,2EAAgB,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC;KAC5D;IACD;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,kEAAa,EAAE,WAAW,EAAC,CAAC,8EAAiB,CAAC;KACzD;IACD;QACE,IAAI,EAAC,UAAU;QACf,SAAS,EAAC,sFAAmB,EAAC,WAAW,EAAC,CAAC,8EAAiB,CAAC;KAC9D;IACD;QACE,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,wEAAe,EAAC,WAAW,EAAC,CAAC,8EAAiB,CAAC;KAC1D;IAED;QACE,IAAI,EAAC,IAAI;QACT,SAAS,EAAC,qEAAc;KACzB;CAEF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AClD7B,+DAA+D,+H;;;;;;;;;;;ACA/D,8K;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,MAAM,CAAC;IACjB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACC;AACc;AACT;AACU;AACM;AACT;AACG;AACH;AACM;AACA;AACJ;AACkB;AAuB1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,2EAAgB;gBAChB,kEAAa;gBACb,qEAAc;gBACd,mEAAa;gBACb,yEAAe;gBACf,yEAAe;gBACf,uFAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,sEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpCtB,+DAA+D,2I;;;;;;;;;;;ACA/D,yR;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,0BAA0B,0BAA0B,wBAAwB,mBAAmB,mBAAmB,KAAK,+CAA+C,ua;;;;;;;;;;;ACAtK,qN;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sGAAsC;;SAEvC,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,yBAAyB,yBAAyB,yBAAyB,KAAK,+CAA+C,uV;;;;;;;;;;;ACA/H,qHAAqH,UAAU,23B;;;;;;;;;;;;;;;;;;;ACA7E;AACF;AAC6C;AAO7F;IAOE,wBAAoB,MAAa,EACb,8BAA6D;QAD7D,WAAM,GAAN,MAAM,CAAO;QACb,mCAA8B,GAA9B,8BAA8B,CAA+B;QANjF,aAAQ,GAAQ,QAAQ;QACxB,aAAQ,GAAQ,EAAE;QAClB,iBAAY,GAAC,KAAK;QACjB,aAAQ,GAAC,kBAAkB;IAGyD,CAAC;IAEtF,oCAAW,GAAX;QAEE,IAAI,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,CAAC,EACjF;YACG,IAAI,CAAC,YAAY,GAAC,KAAK;YACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAEjD;aAAM;YACL,IAAI,CAAC,YAAY,GAAC,IAAI;SAEvB;IACH,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAxBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;+EAQ2B,sDAAM;YACkB,wGAA8B;OARtE,cAAc,CA0B1B;IAAD,qBAAC;CAAA;AA1B0B;;;;;;;;;;;;ACT3B,+DAA+D,2I;;;;;;;;;;;ACA/D,6M;;;;;;;;;;;;;;;;;;ACAkD;AAC2C;AAO7F;IAEE,yBAAoB,8BAA6D;QAA7D,mCAA8B,GAA9B,8BAA8B,CAA+B;IAAI,CAAC;IAEtF,kCAAQ,GAAR;QACE,IAAI,CAAC,8BAA8B,CAAC,MAAM,EAAE;IAC9C,CAAC;IANU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sGAAsC;;SAEvC,CAAC;+EAGmD,wGAA8B;OAFtE,eAAe,CAQ3B;IAAD,sBAAC;CAAA;AAR2B;;;;;;;;;;;;ACR5B,+DAA+D,uI;;;;;;;;;;;ACA/D,g+B;;;;;;;;;;;;;;;;;;ACAkD;AAC2C;AAO7F;IAEE,uBAAoB,8BAA6D;QAA7D,mCAA8B,GAA9B,8BAA8B,CAA+B;IAAI,CAAC;IAEtF,gCAAQ,GAAR;IAEA,CAAC;IANU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAGmD,wGAA8B;OAFtE,aAAa,CAQzB;IAAD,oBAAC;CAAA;AARyB;;;;;;;;;;;;;;;;;;;ACRiB;AACO;AAMlD;IAEE,yBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IAG1C,0CAAgB,GAAhB,UAAiB,QAAQ;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,iCAA+B,QAAQ,WAAQ,CAAC;IAC9E,CAAC;IAED,oCAAU,GAAV,UAAW,QAAQ,EAAC,EAAE;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,iCAA+B,QAAQ,eAAU,EAAI,CAAC;IAC7E,CAAC;IAED,sCAAY,GAAZ,UAAa,QAAQ,EAAC,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,iCAA+B,QAAQ,eAAU,EAAI,CAAC;IAChF,CAAC;IAGL,oCAAU,GAAV,UAAW,QAAQ,EAAC,EAAE,EAAC,IAAI;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iCAA+B,QAAQ,eAAU,EAAI,EAAC,IAAI,CAAC;IAC5E,CAAC;IAEL,oCAAU,GAAV,UAAW,QAAQ,EAAC,IAAI;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iCAA+B,QAAQ,YAAS,EAAC,IAAI,CAAC;IACxE,CAAC;IAxBK,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAGyB,+DAAU;OAFxB,eAAe,CA0B3B;IAAD,sBAAC;CAAA;AA1B2B;;;;;;;;;;;;;;;;;;;;ACPe;AACO;AAElD,uFAAuF;AACvF;IACE,wBAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAElC,CAAC;IACH,qBAAC;AAAD,CAAC;;AAKD;IAEE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAGzC,yDAA4B,GAA5B;QAEE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,wCAAwC,CAAC;IAEhF,CAAC;IAED,yEAA4C,GAA5C,UAA6C,IAAI;QACV,8BAA8B;QACnE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,qDAAmD,IAAM,CAAC;IAEjG,CAAC;IAfU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,kBAAkB,CAgB9B;IAAD,yBAAC;CAAA;AAhB8B;;;;;;;;;;;;;;;;;;ACbY;AAK3C;IAEE;IAAgB,CAAC;IAEjB,qDAAY,GAAZ,UAAa,QAAQ,EAAC,QAAQ;QAC5B,IAAI,QAAQ,KAAG,QAAQ,IAAI,QAAQ,KAAG,MAAM,EAAE;YAC5C,cAAc,CAAC,OAAO,CAAC,mBAAmB,EAAC,QAAQ,CAAC;YAEjD,OAAO,IAAI;SAEf;aAAM;YACJ,OAAO,KAAK;SACd;IACH,CAAC;IAED,uDAAc,GAAd;QACE,IAAI,IAAI,GAAC,cAAc,CAAC,OAAO,CAAC,mBAAmB,CAAC;QACpD,OAAO,CAAC,CAAC,IAAI,KAAG,IAAI,CAAC;IAEvB,CAAC;IAGD,+CAAM,GAAN;QACE,cAAc,CAAC,UAAU,CAAC,mBAAmB,CAAC;IAEhD,CAAC;IAzBU,8BAA8B;QAH1C,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,8BAA8B,CA0B1C;IAAD,qCAAC;CAAA;AA1B0C;;;;;;;;;;;;;;;;;;;;ACLA;AACwD;AACf;AAKpF;IAEE,2BAAoB,MAAa,EACb,8BAA6D;QAD7D,WAAM,GAAN,MAAM,CAAO;QACb,mCAA8B,GAA9B,8BAA8B,CAA+B;IAAI,CAAC;IAE1E,6DAA6D;IACtE,uCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,IAAI,IAAI,CAAC,8BAA8B,CAAC,cAAc,EAAE,EAAE;YACrD,OAAO,IAAI;SACf;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;YAC/B,OAAO,KAAK;SAEb;IAEM,CAAC;IAfF,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC,CAAwC,WAAW;;+EAGxB,sDAAM;YACkB,gGAA8B;OAHtE,iBAAiB,CAiB7B;IAAD,wBAAC;CAAA;AAjB6B;;;;;;;;;;;;ACP9B,+DAA+D,uI;;;;;;;;;;;ACA/D,uJAAuJ,SAAS,8kBAA8kB,SAAS,iCAAiC,eAAe,iCAAiC,kBAAkB,6BAA6B,sCAAsC,6BAA6B,aAAa,wa;;;;;;;;;;;;;;;;;;;;ACAr5B;AACkB;AAC3B;AAEzC;IAEE,cACS,EAAS,EACT,QAAe,EACf,WAAkB,EACjB,UAAe,EAChB,MAAc;QAJd,OAAE,GAAF,EAAE,CAAO;QACT,aAAQ,GAAR,QAAQ,CAAO;QACf,gBAAW,GAAX,WAAW,CAAO;QACjB,eAAU,GAAV,UAAU,CAAK;QAChB,WAAM,GAAN,MAAM,CAAQ;IAErB,CAAC;IACL,WAAC;AAAD,CAAC;;AASD;IAME,UAAU;IACV,gEAAgE;IAChE,gDAAgD;IAChD,mDAAmD;IACnD,iDAAiD;IAEjD,IAAI;IAEJ,uBAAoB,UAA0B,EAC1B,MAAa;QADb,eAAU,GAAV,UAAU,CAAgB;QAC1B,WAAM,GAAN,MAAM,CAAO;IAAG,CAAC;IAErC,gCAAQ,GAAR;QAEE,IAAI,CAAC,YAAY,EAAE;IACrB,CAAC;IAED,oCAAY,GAAZ;QAAA,iBAOC;QALC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAClD,kBAAQ;YACA,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACpB,KAAI,CAAC,KAAK,GAAC,QAAQ;QACpB,CAAC,CAAC;IACd,CAAC;IAED,kCAAU,GAAV,UAAW,EAAE;QAAb,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,eAAa,EAAI,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAC,EAAE,CAAC,CAAC,SAAS,CAC/C,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,KAAI,CAAC,OAAO,GAAC,kBAAgB,EAAE,oBAAiB;YAChD,KAAI,CAAC,YAAY,EAAE;QACrB,CAAC,CACF;IACH,CAAC;IACD,kCAAU,GAAV,UAAW,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,eAAa,EAAI,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC;IAEnC,CAAC;IAED,+BAAO,GAAP;QAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC,CAAC;IAEnC,CAAC;IAnDU,aAAa;QAPzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAiB+B,+EAAe;YACnB,sDAAM;OAftB,aAAa,CAoDzB;IAAD,oBAAC;CAAA;AApDyB;;;;;;;;;;;;ACvB1B,wCAAwC,+BAA+B,KAAK,+CAA+C,+V;;;;;;;;;;;ACA3H,uqC;;;;;;;;;;;;;;;;;;;;ACAkD;AACkB;AACtB;AACW;AAOzD;IAKE,6BAAoB,WAA4B,EACtC,KAAqB,EACrB,MAAc;QAFJ,gBAAW,GAAX,WAAW,CAAiB;QACtC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,sCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;QAC1C,+BAA+B;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,yDAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,KAAK,CAAC;QAExD,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CACxD,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CACzB;SAEF;IAEH,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAkBC;QAjBC,sBAAsB;QACtB,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACvD,cAAI;gBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC9B,CAAC,CACF;SACH;aACG;YACF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3D,cAAI;gBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;YAChC,CAAC,CAAC;SAEL;IACH,CAAC;IAzCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;+EAMiC,+EAAe;YAC/B,8DAAc;YACb,sDAAM;OAPb,mBAAmB,CA0C/B;IAAD,0BAAC;CAAA;AA1C+B;;;;;;;;;;;;ACVhC,+DAA+D,+I;;;;;;;;;;;ACA/D,wEAAwE,MAAM,0BAA0B,aAAa,qdAAqd,2BAA2B,iGAAiG,yBAAyB,qB;;;;;;;;;;;;;;;;;;;ACA7qB;AACD;AACyB;AAO1E;IAOE,0BAAoB,KAAqB,EACrB,OAA0B;QAD1B,UAAK,GAAL,KAAK,CAAgB;QACrB,YAAO,GAAP,OAAO,CAAmB;QAN9C,gBAAW,GAAC,iBAAiB;QAC7B,SAAI,GAAG,EAAE;QACT,8BAAyB,GAAC,EAAE;QAC5B,4BAAuB,GAAC,EAAE;IAGwB,CAAC;IAEnD,mCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;IAChD,CAAC;IAGD,4CAAiB,GAAjB;QAAA,iBAOC;QALG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,CAAC;QACvD,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAClD,kBAAQ,IAAE,YAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,EAAzC,CAAyC,EACnD,eAAK,IAAE,YAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAA/B,CAA+B,CAC7C;IACD,CAAC;IAGD,yDAA8B,GAA9B;QAAA,iBAOD;QALE,mFAAmF;QACjF,IAAI,CAAC,OAAO,CAAC,4CAA4C,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3E,kBAAQ,IAAE,YAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,EAAzC,CAAyC,EACnD,eAAK,IAAE,YAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAA/B,CAA+B,CAC7C;IACD,CAAC;IAEE,qDAA0B,GAA1B,UAA2B,QAAQ;QACjC,wBAAwB;QACxB,gCAAgC;QAC/B,IAAI,CAAC,yBAAyB,GAAC,QAAQ,CAAC,OAAO;IAClD,CAAC;IAED,8CAAmB,GAAnB,UAAoB,KAAK;QACvB,6BAA6B;QAC9B,qCAAqC;QACpC,2CAA2C;QAE3C,IAAI,CAAC,uBAAuB,GAAC,KAAK,CAAC,KAAK,CAAC,OAAO;QAChD,mCAAmC;IAErC,CAAC;IAhDS,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAQ2B,8DAAc;YACb,qFAAkB;OARnC,gBAAgB,CAiD5B;IAAD,uBAAC;CAAA;AAjD4B;;;;;;;;;;;;;ACT7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { ErrorComponent } from './error/error.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { RouteGuardService } from './service/route-guard.service';\nimport { UpdateTodoComponent } from './update-todo/update-todo.component';\n\n\nconst routes: Routes = [\n\n  {\n    path:'',\n    component:LoginComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent \n  },\n  {\n    path:'welcome/:name',\n    component:WelcomeComponent ,canActivate:[RouteGuardService]\n  },\n  {\n    path:'todo', \n    component:TodoComponent ,canActivate:[RouteGuardService]\n  },\n  {\n    path:'todo/:id',\n    component:UpdateTodoComponent,canActivate:[RouteGuardService]\n  },\n  {\n    path:'logout',\n    component:LogoutComponent,canActivate:[RouteGuardService]\n  },\n \n  {\n    path:'**',\n    component:ErrorComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n<app-menu></app-menu>\\n\\n<div class=\\\"container\\\">\\n<router-outlet></router-outlet>\\n</div>\\n\\n<app-footer></app-footer>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Todo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { ErrorComponent } from './error/error.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateTodoComponent } from './update-todo/update-todo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    WelcomeComponent,\n    TodoComponent,\n    ErrorComponent,\n    MenuComponent,\n    FooterComponent,\n    LogoutComponent,\n    UpdateTodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"containetr\\\">\\n  <br><br>\\n    <div class=\\\"alert alert-danger\\\" >\\n        <h4 class=\\\"alert-heading\\\">OOp's !</h4>\\n        <p>Something went wrong ..!!</p>\\n        <hr>\\n        <p class=\\\"mb-0\\\">Please contact Ikhlas .</p>\\n      </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".footer{\\r\\n   position: absolute;\\r\\n    margin-top: 50%;\\r\\n    width: 79%;\\r\\n    bottom: 0%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0dBQ0csa0JBQWtCO0lBQ2pCLGVBQWU7SUFDZixVQUFVO0lBQ1YsVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3RlcntcclxuICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luLXRvcDogNTAlO1xyXG4gICAgd2lkdGg6IDc5JTtcclxuICAgIGJvdHRvbTogMCU7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"footer navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n <div class=\\\"text-muted\\\">\\n  All rights reserved 2019 @ Ikhlas\\n </div>\\n    \\n  </nav>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".login{\\r\\n    margin-top: 50px;\\r\\n    margin-left: 35%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2lue1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAzNSU7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <br>\\n <div class=\\\"alert alert-danger\\\" *ngIf='invalidLogin'>\\n    {{errormsg}}\\n </div>\\n  <div class=\\\"login\\\">\\n  <div class=\\\"  form-row \\\">\\n        <div class=\\\"col-md-6\\\">\\n              <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                           Please Login!\\n                       </div>\\n                    <div class=\\\"card-body\\\">\\n                         <label >Username</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=username>\\n                         <label >Password</label>\\n                             <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=password>\\n             <br>\\n                         <div>\\n                              <button class=\\\"btn btn-success\\\" (click)='handleLogin()'>Login</button>\\n                          </div>\\n                    </div>\\n             </div>\\n       </div>\\n\\n\\n  </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  username:string='Ikhlas'\n  password:string=''\n  invalidLogin=false\n   errormsg='Invalid Login !!'\n\n  constructor(private router:Router,\n              private hardcodedAuthenticationService:HardcodedAuthenticationService) { }\n  \n  handleLogin(){\n\n    if (this.hardcodedAuthenticationService.authenticate(this.username,this.password)) \n    {\n       this.invalidLogin=false\n       this.router.navigate(['welcome',this.username])\n      \n    } else {\n      this.invalidLogin=true\n    \n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <br><br>\\n  <div>\\n      <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n          You have logged out Successfully !\\n        </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private hardcodedAuthenticationService:HardcodedAuthenticationService) { }\n\n  ngOnInit() {\n    this.hardcodedAuthenticationService.logout()\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"https://www.google.com/\\\">MY TODO!</a>\\n  \\n\\n  <div class=\\\"collapse navbar-collapse\\\" >\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink='welcome'>welcome </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink='todo' >Todo</a>\\n      </li>\\n     \\n    </ul>\\n  \\n      <!-- <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a> -->\\n    <a class=\\\"nav-link text-white\\\" *ngIf=\\\"!hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink='login' >Login</a>\\n    <a class=\\\"nav-link text-white \\\" *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink='logout'>Logout</a>\\n  </div>\\n</nav>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private hardcodedAuthenticationService:HardcodedAuthenticationService) { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Todo } from 'src/app/todo/todo.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoDataService {\n\n  constructor(private http:HttpClient) { }\n\n\nretrieveAllTodos(username){\n return this.http.get<Todo[]>(`http://localhost:8080/users/${username}/todos`)\n}\n\ndeleteTodo(username,id){\n return this.http.delete(`http://localhost:8080/users/${username}/todos/${id}`)\n  }\n\n  retrieveTodo(username,id){\n    return this.http.get<Todo>(`http://localhost:8080/users/${username}/todos/${id}`)\n     }\n\n\n updateTodo(username,id,todo){\n   return this.http.put(`http://localhost:8080/users/${username}/todos/${id}`,todo)\n       }\n  \n   createTodo(username,todo){\n   return this.http.post(`http://localhost:8080/users/${username}/todos/`,todo)\n       }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n//We created this class to show the return response for the Spring response  in message\nexport class HelloWorldBean {\n  constructor(public message: string) {\n\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WelcomeDataService {\n\n  constructor(private http: HttpClient) { }\n\n\n  executeHelloWorldBeanService() {\n\n    return this.http.get<HelloWorldBean>('http://localhost:8080/hello-world-bean')\n\n  }\n  \n  executeHelloWorldBeanServiceWithPathvariable(name) {\n                                         // use `` (ticks) insted of ''\n    return this.http.get<HelloWorldBean>(`http://localhost:8080//hello-world/pathvariable/${name}`)\n\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HardcodedAuthenticationService {\n\n  constructor() { }\n\n  authenticate(username,password){\n    if (username==='Ikhlas' && password==='Kazi') {\n      sessionStorage.setItem('authenticatedUser',username)\n\n         return true\n      \n    } else {\n       return false\n    }\n  }\n\n  isUserLoggedIn(){\n    let user=sessionStorage.getItem('authenticatedUser')\n    return !(user===null)\n\n  }\n\n\n  logout(){\n    sessionStorage.removeItem('authenticatedUser')\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { HardcodedAuthenticationService } from './hardcoded-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})                                        //Interface\nexport class RouteGuardService implements CanActivate{\n\n  constructor(private router:Router,\n              private hardcodedAuthenticationService:HardcodedAuthenticationService) { }\n     \n              //Implimentation copy pase from the interface with parameters\n     canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n       if (this.hardcodedAuthenticationService.isUserLoggedIn()) {\n            return true\n       } else {\n         this.router.navigate(['login'])\n         return false\n         \n       }\n\n              }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vdG9kby5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  \\n  <div>\\n    <h3>Your Todo's</h3>\\n  </div>\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"message\\\">{{message}}</div>\\n  <br>\\n  <div>\\n      <table class=\\\"table  \\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th scope=\\\"col\\\">Id</th>\\n               <!-- <th scope=\\\"col\\\">Name</th>  -->\\n              <th scope=\\\"col\\\">Description</th>\\n              <th scope=\\\"col\\\">Target Date</th>\\n              <th scope=\\\"col\\\">Is Done</th>\\n              <th scope=\\\"col\\\">Update</th>\\n              <th scope=\\\"col\\\">Delete</th>\\n            </tr>\\n          </thead>\\n          <tbody >\\n              <tr *ngFor=\\\"let todo of todos\\\">\\n              <th scope=\\\"row\\\">{{todo.id}}</th>\\n               <!-- <td>{{todo.username}}</td> -->\\n                <td>{{todo.description}}</td>\\n                <td>{{todo.targetDate | date : 'shortDate'}}</td>\\n                <td>{{todo.isDone}}</td>\\n                <td><button class=\\\"btn btn-primary\\\" (click)='updateTodo(todo.id)'>Update</button></td>\\n                <td><button class=\\\"btn btn-danger\\\" (click)='deleteTodo(todo.id)'>Delete</button></td>\\n                </tr>\\n          </tbody>\\n        </table>\\n        <div>\\n          <td><button class=\\\"btn btn-primary\\\" (click)='addTodo()'>Add</button></td>\\n        </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TodoDataService } from '../service/data/todo-data.service';\nimport { Router } from '@angular/router';\n\nexport class Todo\n{\n  constructor(\n    public id:number,\n    public username:string,\n    public description:string,\n    public  targetDate:Date,\n    public isDone:boolean\n    \n  ){}\n}\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\n\n\nexport class TodoComponent implements OnInit {\n\n  message:string\n  \n  todos: Todo[]\n\n  // todos=[\n  //   new Todos(1,'Ikhlas','Software Engineer',false,new Date()),\n  //   new Todos(2,'Rahul','PMT',true,new Date()),\n  //   new Todos(3,'Manvesh','CEA',false,new Date()),\n  //   new Todos(4,'Sheetal','ABS',true,new Date())\n\n  // ]\n\n  constructor(private todoserive:TodoDataService,\n              private router:Router) {}\n\n  ngOnInit() {\n\n    this.refreshTodos()\n  }\n\n  refreshTodos(){\n\n    this.todoserive.retrieveAllTodos('ikhlas').subscribe(\n      response=>{\n              console.log(response),\n               this.todos=response\n              })  \n  }\n\n  deleteTodo(id){\n    console.log(`delete me ${id}`)\n    this.todoserive.deleteTodo('Ikhlas',id).subscribe(\n      response=>{\n        console.log(response)\n        this.message=`Deleted todo ${id} Successfully !`\n        this.refreshTodos()\n      }\n    )\n  }\n  updateTodo(id){\n    console.log(`update is ${id}`)\n    this.router.navigate(['todo',id])\n\n  }\n\n  addTodo(){\n    \n    this.router.navigate(['todo',-1])\n\n  }\n}\n","module.exports = \".ng-invalid:not(form){\\r\\nborder-left: 5px solid red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBkYXRlLXRvZG8vdXBkYXRlLXRvZG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDBCQUEwQjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS10b2RvL3VwZGF0ZS10b2RvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctaW52YWxpZDpub3QoZm9ybSl7XHJcbmJvcmRlci1sZWZ0OiA1cHggc29saWQgcmVkO1xyXG59Il19 */\"","module.exports = \"<h1>Todo</h1>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"TodoForm.dirty && TodoForm.invalid \\\">Enter Valid values !</div>\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"TodoForm.dirty && targetDate.invalid \\\">Enter Date !</div>\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"TodoForm.dirty && description.invalid \\\">Enter atleast 5 characters !</div>\\n                   <!-- Validation for form should not be submited blank -->\\n <form (ngSubmit)='!TodoForm.invalid && saveTodo()' #TodoForm=\\\"ngForm\\\">\\n  <fieldset class=\\\"form-group\\\">\\n    <label>Description</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" #description=\\\"ngModel\\\"\\n        [(ngModel)]='todo.description'  name=\\\"description\\\" required=\\\"required\\\" minlength=\\\"5\\\">\\n  </fieldset>\\n\\n  <fieldset class=\\\"form-group\\\">\\n    <label>Target Date</label>\\n    <input type=\\\"date\\\" #targetDate=\\\"ngModel\\\"\\n     [ngModel]=\\\"todo.targetDate | date:'yyyy-MM-dd'\\\" \\n     (ngModelChange)=\\\"todo.targetDate=$event \\\"\\n     class=\\\"form-control\\\" name=\\\"targetDate\\\" required=\\\"required\\\">\\n  </fieldset>\\n  <button class=\\\"btn btn-success\\\" >Save</button>\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TodoDataService } from '../service/data/todo-data.service';\nimport { Todo } from '../todo/todo.component';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-todo',\n  templateUrl: './update-todo.component.html',\n  styleUrls: ['./update-todo.component.css']\n})\nexport class UpdateTodoComponent implements OnInit {\n\n  id: number\n  todo: Todo\n\n  constructor(private todoService: TodoDataService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id']\n    //Default data to remove errors\n    this.todo = new Todo(this.id, '', '', new Date(), false)\n\n    if (this.id != -1) {\n      this.todoService.retrieveTodo('Ikhlas', this.id).subscribe(\n        data => this.todo = data\n      )\n\n    }\n\n  }\n\n  saveTodo() {\n    //console.log(\"Saved\")\n    if (this.id === -1) {\n       this.todoService.createTodo('Ikhlas',this.todo).subscribe(\n         data=>{\n           console.log(data)\n           this.router.navigate['todo']\n         }\n       )\n    }\n    else{\n      this.todoService.updateTodo('Ikhlas', 1, this.todo).subscribe(\n        data => {\n          console.log(data)\n          this.router.navigate(['todo'])\n        })\n\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div>\\n    <h3>Welcome {{name}}!</h3>\\n    <h3>Welcome {{newvariable}}!</h3>\\n  </div>\\n  <div>\\n    <p>You can check your Todo's now </p>\\n    <button class=\\\"btn btn-success\\\" routerLink='/todo'>Todo</button>\\n  </div>\\n  <div class=\\\"container\\\">\\n    <h3>Get your Spring Boot rest service here</h3>\\n    <button class=\\\"btn btn-primary\\\" (click)='getWelcomeMessageWithParameter()'>Invoke RestService</button>\\n  </div>\\n  <div class=\\\"container\\\">\\n    <h3>Your RestService message</h3>\\n    <div *ngIf=\\\"welcomeMessageFromService\\\">{{welcomeMessageFromService}}</div>\\n  </div>\\n\\n  <div class=\\\"alert alert-warning\\\" *ngIf='errorMessageFromService'>\\n    {{errorMessageFromService}}\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WelcomeDataService } from '../service/data/welcome-data.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n  \n  newvariable=\"Show me the msg\"\n  name = ''\n  welcomeMessageFromService=''\n  errorMessageFromService=''\n\n  constructor(private route: ActivatedRoute,\n              private service:WelcomeDataService) { }\n\n  ngOnInit() {\n    this.name = this.route.snapshot.params['name']\n  }\n\n\n  getWelcomeMessage(){\n\n      console.log(this.service.executeHelloWorldBeanService())\n       this.service.executeHelloWorldBeanService().subscribe(\n          response=>this.handleSuccessfullResposnse(response),\n          error=>this.handleErrorResponse(error)\n  )\n  }\n  \n\n  getWelcomeMessageWithParameter(){\n\n   //console.log(this.service.executeHelloWorldBeanServiceWithPathvariable(this.name))\n     this.service.executeHelloWorldBeanServiceWithPathvariable(this.name).subscribe(\n        response=>this.handleSuccessfullResposnse(response),\n        error=>this.handleErrorResponse(error)\n)\n}\n\n   handleSuccessfullResposnse(response){\n     // console.log(response)\n     // console.log(response.message)\n      this.welcomeMessageFromService=response.message\n   }\n\n   handleErrorResponse(error){\n     //console.log(\"First=\"+error)\n    // console.log(\"second=\"+error.error)\n     //console.log(\"Third=\"+error.error.message)\n\n     this.errorMessageFromService=error.error.message\n     //this.errorMessageFromService=true\n\n   }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}